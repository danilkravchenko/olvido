
 	varying vec4 v_color;
    varying vec2 vTexCoord;

    uniform vec2 screenSize;
    uniform sampler2D u_texture;
    uniform vec4 v_time;
    uniform vec2 dir;

    float RADIUS = 100.0;
    float SOFTNESS = 0.78;
    float blurSize = 1.0/300.0;

    void main() {

     vec4 sum = vec4(0.0);

        float hstep = dir.x;
        float vstep = dir.y;

       	sum += texture2D(u_texture, vec2(vTexCoord.x - 4.0*blurSize*hstep, vTexCoord.y - 4.0*blurSize*vstep)) * 0.0162162162;
       	sum += texture2D(u_texture, vec2(vTexCoord.x - 3.0*blurSize*hstep, vTexCoord.y - 3.0*blurSize*vstep)) * 0.0540540541;
       	sum += texture2D(u_texture, vec2(vTexCoord.x - 2.0*blurSize*hstep, vTexCoord.y - 2.0*blurSize*vstep)) * 0.1216216216;
       	sum += texture2D(u_texture, vec2(vTexCoord.x - 1.0*blurSize*hstep, vTexCoord.y - 1.0*blurSize*vstep)) * 0.1945945946;

       	sum += texture2D(u_texture, vec2(vTexCoord.x, vTexCoord.y)) * 0.2270270270;

       	sum += texture2D(u_texture, vec2(vTexCoord.x + 1.0*blurSize*hstep, vTexCoord.y + 1.0*blurSize*vstep)) * 0.1945945946;
       	sum += texture2D(u_texture, vec2(vTexCoord.x + 2.0*blurSize*hstep, vTexCoord.y + 2.0*blurSize*vstep)) * 0.1216216216;
       	sum += texture2D(u_texture, vec2(vTexCoord.x + 3.0*blurSize*hstep, vTexCoord.y + 3.0*blurSize*vstep)) * 0.0540540541;
       	sum += texture2D(u_texture, vec2(vTexCoord.x + 4.0*blurSize*hstep, vTexCoord.y + 4.0*blurSize*vstep)) * 0.0162162162;

        vec4 timedColor = (v_color + v_time);
        vec2 position = (gl_FragCoord.xy / screenSize.xy) - vec2(5);
        float len = length(position);
        float vignette = smoothstep(RADIUS, RADIUS-SOFTNESS, len);
        sum.rgb = mix(sum.rgb, sum.rgb * vignette, 0.3);

        gl_FragColor = vec4(sum.rgb, sum.a);
    }